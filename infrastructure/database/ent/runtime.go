// Code generated by entc, DO NOT EDIT.

package ent

import (
	"gqlapi/infrastructure/database/ent/categories"
	"gqlapi/infrastructure/database/ent/product"
	"gqlapi/infrastructure/database/ent/schema"
	"gqlapi/infrastructure/database/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categoriesFields := schema.Categories{}.Fields()
	_ = categoriesFields
	// categoriesDescName is the schema descriptor for name field.
	categoriesDescName := categoriesFields[0].Descriptor()
	// categories.DefaultName holds the default value on creation for the name field.
	categories.DefaultName = categoriesDescName.Default.(string)
	// categories.NameValidator is a validator for the "name" field. It is called by the builders before save.
	categories.NameValidator = categoriesDescName.Validators[0].(func(string) error)
	// categoriesDescDescription is the schema descriptor for description field.
	categoriesDescDescription := categoriesFields[1].Descriptor()
	// categories.DefaultDescription holds the default value on creation for the description field.
	categories.DefaultDescription = categoriesDescDescription.Default.(string)
	// categories.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	categories.DescriptionValidator = categoriesDescDescription.Validators[0].(func(string) error)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[2].Descriptor()
	// product.DefaultName holds the default value on creation for the name field.
	product.DefaultName = productDescName.Default.(string)
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescStock is the schema descriptor for stock field.
	productDescStock := productFields[3].Descriptor()
	// product.StockValidator is a validator for the "stock" field. It is called by the builders before save.
	product.StockValidator = productDescStock.Validators[0].(func(int64) error)
	// productDescDescription is the schema descriptor for description field.
	productDescDescription := productFields[4].Descriptor()
	// product.DefaultDescription holds the default value on creation for the description field.
	product.DefaultDescription = productDescDescription.Default.(string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUserName is the schema descriptor for userName field.
	userDescUserName := userFields[0].Descriptor()
	// user.UserNameValidator is a validator for the "userName" field. It is called by the builders before save.
	user.UserNameValidator = userDescUserName.Validators[0].(func(string) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
}
